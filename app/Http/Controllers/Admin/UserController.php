<?php

namespace App\Http\Controllers\Admin;

use App\User;
use Illuminate\Http\Request;
use Illuminate\Http\Response;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Validator;

class UserController extends AbstractController
{

    /**
     * Where to redirect users after form submited.
     *
     * @var string
     */
    protected $redirectTo = 'texts';

    /**
     * @var $entity
     */
    protected $entity = User::class;

    /**
     * @var string
     */
    protected $viewPrefix = 'admin.users';

    /**
     * @var string
     */
    protected $routePrefix = 'admin.users';

    /**
     * @var array
     */
    protected $othersParams = array();

    /**
     * Display a listing of the resource.
     * @return Response
     */
    public function index($fields = [], $filters = [], $columnDefs = '')
    {
        return parent::index(['Nome' => 'name', 'Email' => 'email'], [], '[{"targets": [3], "searchable": false, "orderable": false}]');
    }

    public function store(Request $request, bool $returnEntity = false)
    {
        if($request->get('password') == $request->get('password_confirmation')) {
            $request['password'] = Hash::make($request->get('password'));
            $request['password_confirmation'] = $request['password'];
        }
        $request['api_token'] = Hash::make($request->get('email'));
        return parent::store($request, $returnEntity); // TODO: Change the autogenerated stub
    }

    /**
     * Update the specified resource in storage.
     * @param  Request $request
     * @return Response
     */
    public function update(Request $request, string $id,  bool $returnEntity = false)
    {
        $entity = $this->entity::where(DB::raw('sha1(id)'), '=', $id)->first();
        if(is_null($request->get('password'))){
            $request['password'] = $entity->password;
            $request['password_confirmation'] = $entity->password;
        } else {
            if($request->get('password') == $request->get('password_confirmation')){
                $request['password'] = Hash::make($request->get('password'));
                $request['password_confirmation'] = $request['password'];
            }

        }
        return parent::update($request, $id, $returnEntity);
    }

    /**
     * Get a validator for an incoming registration request.
     *
     * @param  array  $data
     * @return \Illuminate\Contracts\Validation\Validator
     */
    protected function validator(array $data)
    {
        return Validator::make($data, [
            'name' => 'required|string|max:255',
            'email' => 'required|string|email|max:255|unique:users'.(isset($data['id']) ? ',id,'. $data['id'] : ''),
            'password' => 'required|string|min:6|confirmed',
        ]);
    }

}
